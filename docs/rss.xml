<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>NewSD的博客</title><link>https://newsd.github.io</link><description>NewSD的个人博客，是一个分享好玩软件的科技博主。</description><copyright>NewSD的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/24608412?v=4&amp;size=64</url><title>avatar</title><link>https://newsd.github.io</link></image><lastBuildDate>Wed, 20 Nov 2024 11:57:57 +0000</lastBuildDate><managingEditor>NewSD的博客</managingEditor><ttl>60</ttl><webMaster>NewSD的博客</webMaster><item><title>少年志</title><link>https://newsd.github.io/post/shao-nian-zhi.html</link><description>风雪压我两三年，我笑风轻雪如棉；心中仍有鸿鹄志，他日登顶笑苍天；待到功成与名就，生吃黄连苦也甜；无人扶我青云志，我自踏雪至山巅。</description><guid isPermaLink="true">https://newsd.github.io/post/shao-nian-zhi.html</guid><pubDate>Wed, 20 Nov 2024 11:57:32 +0000</pubDate></item><item><title>老黄牛-臧克家</title><link>https://newsd.github.io/post/lao-huang-niu---zang-ke-jia.html</link><description>老牛已知夕阳晚，不用扬鞭自奋蹄。</description><guid isPermaLink="true">https://newsd.github.io/post/lao-huang-niu---zang-ke-jia.html</guid><pubDate>Wed, 30 Oct 2024 13:27:26 +0000</pubDate></item><item><title>自嘲</title><link>https://newsd.github.io/post/zi-chao.html</link><description>本是后山人，偶做前堂客。</description><guid isPermaLink="true">https://newsd.github.io/post/zi-chao.html</guid><pubDate>Fri, 25 Oct 2024 13:49:47 +0000</pubDate></item><item><title>.gitconfig配置文件的内容</title><link>https://newsd.github.io/post/.gitconfig-pei-zhi-wen-jian-de-nei-rong.html</link><description>&#13;
[user]&#13;
	email = niuhaideng@163.com&#13;
	name = newsd&#13;
[alias]&#13;
	st = status&#13;
	co = checkout&#13;
	br = branch&#13;
	ci = commit&#13;
	pl = pull&#13;
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %C(bold blue)%s%Creset %Cgreen(%cr) &lt;%an&gt;%Creset' --abbrev-commit --date=relative&#13;
	last = log -1&#13;
	ps = push&#13;
	ad = add&#13;
	cm = commit -m&#13;
[credential]&#13;
	helper = store&#13;
[core]&#13;
	quotepath = false。</description><guid isPermaLink="true">https://newsd.github.io/post/.gitconfig-pei-zhi-wen-jian-de-nei-rong.html</guid><pubDate>Sun, 01 Sep 2024 09:47:37 +0000</pubDate></item><item><title>小纸条</title><link>https://newsd.github.io/post/xiao-zhi-tiao.html</link><description>致牛海登的一封小纸条.
于11年12月14日.
       你：不好！给你说实话，就说实话了，就是不好！学习吧！勉强还可以接受.但是在我心目中有一个阴影，大大的阴影.就是曾己何时，我问你题，你老是让我觉得心不在焉，不过现在好多了.还有说话老是duǐ回我，让我一个小女生不知所措，不好！这样可烦人，所以我老是给你生气有的时候.不过你的表现还可以让女生们勉强接受，因为会主动和别人说话，化解矛盾，这是多为一个男生具有的好习惯其次你不懂得化解组内关系，看见有人闹别扭，你应该先做男生工作，然后再帮忙化解矛盾.(当然大多时候都是我吧，但是我也就是会那一会儿就好了吧！)·没了.以后想起来了再说吧！
拜拜！I'm not looking forward to hearing from you!
发件人：刘静静⑧。</description><guid isPermaLink="true">https://newsd.github.io/post/xiao-zhi-tiao.html</guid><pubDate>Sun, 11 Aug 2024 15:33:08 +0000</pubDate></item><item><title>梦想</title><link>https://newsd.github.io/post/meng-xiang.html</link><description>“只有勇敢去做梦，才会有那么一个目标去实现

但是更别忘了：这一路上会有艰辛，困难，疑惑，怀疑，付出，泪水，失败

但是一定要享受这个过程，因为所有的失败都是为了那么一刻的成功

如果你站在我今天这个位置你会发现，过去一切一切的付出，在这一次真的都是值得的，我觉得人生就是不虚此行”---郑钦文。</description><guid isPermaLink="true">https://newsd.github.io/post/meng-xiang.html</guid><pubDate>Mon, 05 Aug 2024 01:10:05 +0000</pubDate></item><item><title>仓颉变量的使用</title><link>https://newsd.github.io/post/cang-jie-bian-liang-de-shi-yong.html</link><description>```Cangjie&#13;
&#13;
let a = 2023&#13;
// func b() {}&#13;
struct C {}&#13;
&#13;
class D {}&#13;
&#13;
enum E {&#13;
    F | G&#13;
}&#13;
&#13;
func fa() {&#13;
    let b = 2023&#13;
    func fb() {&#13;
        println(b)&#13;
    }&#13;
    fb()&#13;
}&#13;
&#13;
class A {&#13;
    let b = 2024&#13;
    public func fb() {&#13;
        println(b)&#13;
    }&#13;
}&#13;
&#13;
struct Copy {&#13;
    var data = 2012&#13;
}&#13;
&#13;
class Share {&#13;
    var data = 2012&#13;
}&#13;
&#13;
let element = '仓颉'&#13;
&#13;
main(): Int64 {&#13;
    println('hello world')&#13;
    //首先，‌在控制台中输入执行chcp 65001命令，‌&#13;
    //这个命令的作用是设置控制台的语言编码格式为UTF-8。</description><guid isPermaLink="true">https://newsd.github.io/post/cang-jie-bian-liang-de-shi-yong.html</guid><pubDate>Fri, 12 Jul 2024 12:08:56 +0000</pubDate></item><item><title>仓颉函数的示例</title><link>https://newsd.github.io/post/cang-jie-han-shu-de-shi-li.html</link><description>```Cangjie&#13;
// import std.random.*&#13;
from std import random.*&#13;
&#13;
main() {&#13;
    let number: Int8 = Random().nextInt8()&#13;
    println(number)&#13;
    if (number % 2 == 0) {&#13;
        // 偶数&#13;
        println('even')&#13;
    } else {&#13;
        // 奇数&#13;
        println('odd')&#13;
    }&#13;
&#13;
//     let number = 1&#13;
// // Error, mismatched types&#13;
//     if (number) { &#13;
//         println('Non-zero number')&#13;
//     }&#13;
&#13;
    let speed = Random().nextFloat64() * 20.0&#13;
    println('${speed} km/s')&#13;
    if (speed &gt; 16.7) {&#13;
        println('3.第三宇宙速度，鹊桥相会')&#13;
    } else if (speed &gt; 11.2) {&#13;
        println('2.第二宇宙速度，嫦娥奔月')&#13;
    } else if (speed &gt; 7.9) {&#13;
        println('1.第一宇宙速度，腾云驾雾')&#13;
    } else {&#13;
        println('0.脚踏实地，仰望星空')&#13;
    }&#13;
&#13;
    println('---------------------')&#13;
&#13;
    let zero: Int8 = 0&#13;
    let one: Int8 = 1&#13;
    let voltage = 5.0&#13;
    let bit = if (voltage &lt; 2.5) {&#13;
        zero&#13;
    } else {&#13;
        one&#13;
    }&#13;
    println('bit : ${bit}')&#13;
&#13;
    println('---------------------')&#13;
&#13;
&#13;
    var root = 0.0&#13;
    var min = 1.0&#13;
    var max = 2.0&#13;
    var error = 1.0&#13;
    let tolerance = 0.1 ** 10&#13;
&#13;
    while (error ** 2 &gt; tolerance) {&#13;
        root = (min + max) / 2.0&#13;
        error = root ** 2 - 2.0&#13;
        if (error &gt; 0.0) {&#13;
            max = root&#13;
        } else {&#13;
            min = root&#13;
        }&#13;
    }&#13;
    println('The square root of 2 is approximately equal to : ${root}')&#13;
&#13;
&#13;
    println('---------------------')&#13;
    let random = Random()&#13;
    var totalPoints = 0&#13;
    var hitPoints = 0&#13;
&#13;
    do {&#13;
        // 在 ((0, 0), (1, 1)) 这个正方形中随机取点&#13;
        let x = random.nextFloat64()&#13;
        let y = random.nextFloat64()&#13;
        // 判断是否落在正方形内接圆里&#13;
        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 &lt; 0.25) {&#13;
            hitPoints++&#13;
        }&#13;
        totalPoints++&#13;
    } while (totalPoints &lt; 1000000)&#13;
&#13;
    let pi = 4.0 * Float64(hitPoints) / Float64(totalPoints)&#13;
    println('The approximate value of pi is : ${pi}')&#13;
&#13;
&#13;
    println('---------------------')&#13;
&#13;
&#13;
    // let metaArray = [r'甲', r'乙', r'丙', r'丁', r'戊', r'己', r'庚', r'辛', r'壬', r'癸'];&#13;
    let metaArray = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸']&#13;
    // let noumenonArray = [r'寅', r'卯', r'辰', r'巳', r'午', r'未', r'申', r'酉', r'戌', r'亥', r'子', r'丑']&#13;
    let noumenonArray = ['寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥', '子', '丑']&#13;
    let year = 2024&#13;
    // 年份对应的天干索引&#13;
    let metaOfYear = ((year % 10) + 10 - 4) % 10&#13;
    // 此年首月对应的天干索引&#13;
    var index = (2 * metaOfYear + 3) % 10 - 1&#13;
    println('农历 2024 年各月干支：')&#13;
    for (noumenon in noumenonArray) {&#13;
        print('${metaArray[index]}${noumenon} ')&#13;
        index = (index + 1) % 10&#13;
    }&#13;
    println()&#13;
    println('-----------------------------------------------')&#13;
&#13;
    var sum = 0&#13;
    for (i in 1..=100) {&#13;
        sum += i&#13;
    }&#13;
    println(sum)&#13;
&#13;
    println('-----------------------------------------------')&#13;
&#13;
    // 遍历1到100之间的所有整数&#13;
    for (i in 1..=100) {&#13;
        // 检查当前数字是否为偶数&#13;
        if (i % 2 == 0) {&#13;
            // 如果是偶数，则打印该数字&#13;
            println(i)&#13;
        }&#13;
    }&#13;
&#13;
    println('------------------------------------------------')&#13;
    let array = [(1, 2), (3, 4), (5, 6)]&#13;
    for ((x, y) in array) {&#13;
        println('${x}, ${y}')&#13;
    }&#13;
    println('------------------------------------------------')&#13;
    var number2 = 2&#13;
    for (_ in 0..5) {&#13;
        number2 *= number2&#13;
    }&#13;
    //4294967296&#13;
    println(number2)&#13;
    println('------------------------------------------------')&#13;
    // i 为奇数才会执行循环体&#13;
    for (i in 0..8 where i % 2 == 1) { &#13;
        println(i)&#13;
    }&#13;
    println('------------------------------------------------') &#13;
&#13;
    // 遍历数组，找到第一个能被5整除的数&#13;
    let numbers = [12, 18, 25, 36, 49, 55]&#13;
    for (number in numbers) {&#13;
        if (number % 5 == 0) {&#13;
            println(number)&#13;
            break&#13;
        }&#13;
    }&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
}&#13;
&#13;
```。</description><guid isPermaLink="true">https://newsd.github.io/post/cang-jie-han-shu-de-shi-li.html</guid><pubDate>Fri, 12 Jul 2024 12:06:18 +0000</pubDate></item><item><title>仓颉数组，元组等数据结构</title><link>https://newsd.github.io/post/cang-jie-shu-zu-%EF%BC%8C-yuan-zu-deng-shu-ju-jie-gou.html</link><description>```Cangjie&#13;
&#13;
&#13;
&#13;
&#13;
func add(a: Int64, b: Int64): Int64 {&#13;
    return a + b&#13;
}&#13;
&#13;
main() {&#13;
    println('hello world')&#13;
    var a1 = 1&#13;
    var b1 = 2&#13;
    var c1 = add(a1, b1)&#13;
    println(c1)&#13;
&#13;
    let arr = [0, 1, 2, 3, 4, 5]&#13;
    for (i in arr) {&#13;
        println('The element is ${i}')&#13;
    }&#13;
&#13;
    arr[0] = 3&#13;
    println('The first element is ${arr[0]}')&#13;
&#13;
    println('--------------------------------------')&#13;
    &#13;
    // VArray&lt;T, $N&gt;(initElement: (Int64) -&gt; T)&#13;
    let vb = VArray&lt;Int64, $5&gt;({ i =&gt; i}) &#13;
    // [0, 1, 2, 3, 4]&#13;
    // VArray&lt;T, $N&gt;(item!: T)&#13;
    let vc = VArray&lt;Int64, $5&gt;(item: 0) &#13;
    // [0, 0, 0, 0, 0]&#13;
    var va: VArray&lt;Int64, $3&gt; = [1, 2, 3]&#13;
    // 使用index遍历VArray&#13;
    for (i in 0..va.size) {&#13;
        println('The index is ${i}, the element is ${va[i]}')&#13;
    }&#13;
&#13;
    println('--------------------------------------')&#13;
&#13;
    // Range&lt;T&gt;(start: T, end: T, step: Int64, hasStart: Bool, hasEnd: Bool, isClosed: Bool)&#13;
    let r1 = Range&lt;Int64&gt;(0, 10, 1, true, true, true) &#13;
    // r1 contains 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10&#13;
    let r2 = Range&lt;Int64&gt;(0, 10, 1, true, true, true) &#13;
    // r2 contains 0, 1, 2, 3, 4, 5, 6, 7, 8, 9&#13;
    let r3 = Range&lt;Int64&gt;(10, 0, -2, true, true, false) &#13;
    // r3 contains 10, 8, 6, 4, 2&#13;
&#13;
    for (i in r1) {&#13;
        println('The element is ${i}')&#13;
    }&#13;
    println('--------------------------------------')&#13;
&#13;
&#13;
    let n = 10&#13;
    let r11 = 0..10 : 1   // r1 contains 0, 1, 2, 3, 4, 5, 6, 7, 8, 9&#13;
    let r21 = 0..=n : 1   // r2 contains 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10&#13;
    let r31 = n..0 : -2   // r3 contains 10, 8, 6, 4, 2&#13;
    let r41 = 10..=0 : -2 // r4 contains 10, 8, 6, 4, 2, 0&#13;
&#13;
    let r5 = 0..10   // the step of r5 is 1, and it contains 0, 1, 2, 3, 4, 5, 6, 7, 8, 9&#13;
    //let r6 = 0..10 : 0 &#13;
    // Error, step cannot be 0&#13;
&#13;
    let r7 = 10..0 : 1 // r7 to r10 are empty ranges&#13;
    let r8 = 0..10 : -1&#13;
    let r9 = 10..=0 : 1&#13;
    let r10 = 0..=10 : -1&#13;
&#13;
    println('--------------------------------------')&#13;
&#13;
    //  输出你好&#13;
    let he: Rune = '\u{4f60}'&#13;
    let llo: Rune = '\u{597d}'&#13;
    print(he)&#13;
    print(llo)&#13;
&#13;
    println('--------------------------------------')   &#13;
    let slash: Rune = '\\'&#13;
    let newLine: Rune = '\n'&#13;
    let tab: Rune = '\t'&#13;
&#13;
    println('*********************************************')&#13;
    println('Hello${slash}World${newLine}nihao${tab}wo${tab}de${tab}hao')&#13;
    println('*********************************************')&#13;
    let s1: String = ''&#13;
// let s2 = 'Hello Cangjie Lang'&#13;
let s3 = '\'Hello Cangjie Lang\''&#13;
// let s4 = 'Hello Cangjie Lang\n'&#13;
&#13;
let s11: String = '''&#13;
    Hello,&#13;
    Cangjie Lang&#13;
    '''&#13;
/*&#13;
let s21 = '''&#13;
    Hello,&#13;
    Cangjie Lang'''&#13;
*/&#13;
let s12: String = #''#&#13;
// let s22 = ##'\n'##&#13;
let s32 = ###'&#13;
    Hello,&#13;
    Cangjie&#13;
    Lang'###&#13;
&#13;
/*&#13;
    //mismatched types expected 'UInt8', found 'Struct-String'&#13;
    var bt: Byte = '0'&#13;
    print(bt)&#13;
    bt = '1'&#13;
    print(bt)&#13;
    var ru: Rune = '0'&#13;
    print(ru)&#13;
    ru = '1'&#13;
    print(ru)&#13;
*/&#13;
&#13;
    println('--------------------------------------')&#13;
&#13;
    let fruit = 'apples'&#13;
    let count = 10&#13;
    let s = 'There are ${count * count} ${fruit}'&#13;
    println(s)&#13;
&#13;
    let r = 2.4&#13;
    let area = 'The area of a circle with radius ${r} is ${let PI = 3.141592; PI * r * r}'&#13;
    println(area)&#13;
&#13;
    println('--------------------------------------')   &#13;
    let x: (Int64, Float64) = (3, 3.141592)&#13;
    let y: (Int64, Float64, String) = (3, 3.141592, 'PI')&#13;
    println('${x[0]}, ${x[1]}')&#13;
    println('${y[0]}, ${y[1]}, ${y[2]}')&#13;
    println('--------------------------------------')   &#13;
    var a: Int64&#13;
    var b: String&#13;
    var c: Unit&#13;
    var f = { =&gt; ((1, 'abc'), ())}&#13;
    ((a, b), c) = f() // value of a is 1, value of b is 'abc', value of c is '()'&#13;
    ((a, b), _) = ((2, 'def'), 3.0) // value of a is 2, value of b is 'def', 3.0 is ignored&#13;
    println('-----------------------------------------')&#13;
    func getFruitPrice (): (name: String, price: Int64) {&#13;
        return ('banana', 10)&#13;
    }&#13;
&#13;
&#13;
&#13;
}&#13;
&#13;
&#13;
&#13;
&#13;
```。</description><guid isPermaLink="true">https://newsd.github.io/post/cang-jie-shu-zu-%EF%BC%8C-yuan-zu-deng-shu-ju-jie-gou.html</guid><pubDate>Fri, 12 Jul 2024 12:04:04 +0000</pubDate></item><item><title>各种编程语言的简略代表语句</title><link>https://newsd.github.io/post/ge-zhong-bian-cheng-yu-yan-de-jian-lve-dai-biao-yu-ju.html</link><description>go语言：Less can be more
Python：Life is short,I use Python！

以下是一些编程语言的代表性语句或格言，它们通常反映了这些语言的设计哲学、社区文化或者特定特点：
1. **Java**: 'Write once, run anywhere.'（一次编写，到处运行）
2. **C**: 'C combines the power of assembly language with the ease of use of a high-level language.'（C语言结合了汇编语言的力量和高级语言的使用便捷性）
3. **C++**: 'C++: Where friends have access to your private members.'（C++：在这里，朋友可以访问你的私有成员）
4. **JavaScript**: 'Any application that can be written in JavaScript will eventually be written in JavaScript.'（任何可以用JavaScript编写的应用程序最终都会用JavaScript编写）
5. **PHP**: 'PHP: Hypertext Preprocessor'（PHP：超文本预处理器）
6. **Ruby**: 'Ruby is a language of careful balance. Its creator, Yukihiro Matsumoto, blended parts of his favorite languages (Perl, Smalltalk, Eiffel, Ada, and Lisp) to form a new language that balanced functional programming with imperative programming.'（Ruby是一种平衡性很强的语言。</description><guid isPermaLink="true">https://newsd.github.io/post/ge-zhong-bian-cheng-yu-yan-de-jian-lve-dai-biao-yu-ju.html</guid><pubDate>Thu, 11 Jul 2024 15:10:01 +0000</pubDate></item><item><title>go语言的变量赋值和指针*int与取地址值&amp;的应用</title><link>https://newsd.github.io/post/go-yu-yan-de-bian-liang-fu-zhi-he-zhi-zhen--int-yu-qu-di-zhi-zhi-%26-de-ying-yong.html</link><description>```go&#13;
package main&#13;
&#13;
import 'fmt'&#13;
&#13;
// main函数是程序的入口点&#13;
func main() {&#13;
	// 初始化一个整型变量num并赋值为10&#13;
	var num int = 10&#13;
	// 输出变量num的值&#13;
	fmt.Println('num = ', num)&#13;
&#13;
	// 初始化一个指向整型的指针变量p，并将其指向num&#13;
	var p *int = &amp;num&#13;
	// 输出指针变量p的值&#13;
	fmt.Println('p = ', p)&#13;
	// 输出指针p所指向的值&#13;
	fmt.Println('*p = ', *p)&#13;
&#13;
	// 输出变量num的地址&#13;
	fmt.Println('&amp;num = ', &amp;num)&#13;
	// 输出指针变量p的地址&#13;
	fmt.Println('&amp;p = ', &amp;p)&#13;
}&#13;
&#13;
&#13;
```。</description><guid isPermaLink="true">https://newsd.github.io/post/go-yu-yan-de-bian-liang-fu-zhi-he-zhi-zhen--int-yu-qu-di-zhi-zhi-%26-de-ying-yong.html</guid><pubDate>Thu, 11 Jul 2024 10:32:22 +0000</pubDate></item><item><title>定义一个通用的数值与字符串的加法运算</title><link>https://newsd.github.io/post/ding-yi-yi-ge-tong-yong-de-shu-zhi-yu-zi-fu-chuan-de-jia-fa-yun-suan.html</link><description>```go&#13;
&#13;
package main&#13;
&#13;
import (&#13;
	'fmt'&#13;
)&#13;
&#13;
// 定义一个类型约束，包含所有内置的数值类型和字符串类型&#13;
type NumericOrString interface {&#13;
	int | int8 | int16 | int32 | int64 |&#13;
		uint | uint8 | uint16 | uint32 | uint64 | uintptr |&#13;
		float32 | float64 | complex64 | complex128 | string&#13;
}&#13;
&#13;
// 使用泛型的add函数，要求类型T满足NumericOrString约束&#13;
func add[T NumericOrString](a, b T) T {&#13;
	return a + b&#13;
}&#13;
&#13;
func main() {&#13;
	result := add(5, 3)&#13;
	fmt.Println(result) // 输出: 8&#13;
&#13;
	result1 := add(float64(5.5), float64(3.2))&#13;
	fmt.Println(result1) // 输出: 8.7&#13;
&#13;
	// 注意：字符串相加会按拼接处理&#13;
	result2 := add('Hello ', 'World')&#13;
	fmt.Println(result2) // 输出: Hello World&#13;
}&#13;
&#13;
&#13;
```。</description><guid isPermaLink="true">https://newsd.github.io/post/ding-yi-yi-ge-tong-yong-de-shu-zhi-yu-zi-fu-chuan-de-jia-fa-yun-suan.html</guid><pubDate>Thu, 11 Jul 2024 09:27:02 +0000</pubDate></item><item><title>打印时间间隔的go程序</title><link>https://newsd.github.io/post/da-yin-shi-jian-jian-ge-de-go-cheng-xu.html</link><description>```go&#13;
&#13;
&#13;
package main&#13;
&#13;
import (&#13;
	'fmt'&#13;
	'time'&#13;
)&#13;
&#13;
// 定义一个表示时间间隔的结构体&#13;
type Duration struct {&#13;
	time.Duration&#13;
}&#13;
&#13;
// 实现一个将时间间隔格式化为字符串的方法&#13;
// String 方法将 Duration 类型的值转换为字符串格式，精确到秒的小数点后两位。</description><guid isPermaLink="true">https://newsd.github.io/post/da-yin-shi-jian-jian-ge-de-go-cheng-xu.html</guid><pubDate>Thu, 11 Jul 2024 03:27:59 +0000</pubDate></item><item><title>main.go</title><link>https://newsd.github.io/post/main.go.html</link><description>package main
import 'fmt'
func main() {
    fmt.Println('Hello, World!')
}   。</description><guid isPermaLink="true">https://newsd.github.io/post/main.go.html</guid><pubDate>Wed, 10 Jul 2024 13:04:23 +0000</pubDate></item><item><title>Alita</title><link>https://newsd.github.io/post/Alita.html</link><description>I do not stand by in the present of evil！。</description><guid isPermaLink="true">https://newsd.github.io/post/Alita.html</guid><pubDate>Tue, 09 Jul 2024 07:42:44 +0000</pubDate></item><item><title>周易</title><link>https://newsd.github.io/post/zhou-yi.html</link><description>《周易》
乾（☰）、坤（☷）、震（☳）、艮（☶）、
离（☲）、坎（☵）、兑（☱）、巽（☴）


记诵口诀：
乾三连，坤六断；震仰盂，艮覆碗。</description><guid isPermaLink="true">https://newsd.github.io/post/zhou-yi.html</guid><pubDate>Sun, 07 Jul 2024 09:32:57 +0000</pubDate></item><item><title>排查CPU占有率过高</title><link>https://newsd.github.io/post/pai-cha-CPU-zhan-you-lv-guo-gao.html</link><description>在Java服务器中排查CPU占用率过高的问题，可以通过以下步骤来进行：

检查Java进程：
使用命令行工具top（Linux）或taskmgr（Windows）查看CPU占用率高的进程。</description><guid isPermaLink="true">https://newsd.github.io/post/pai-cha-CPU-zhan-you-lv-guo-gao.html</guid><pubDate>Fri, 05 Jul 2024 15:52:43 +0000</pubDate></item><item><title>舍了得不到</title><link>https://newsd.github.io/post/she-le-de-bu-dao.html</link><description>舍了得不到
舍弃了生日的忍受辱骂！
得到了一时的无缘泪水！
舍弃了每月的昏暗牢笼！
得到了两天的无眠归程！
舍弃了过节的嘻耍玩伴！
得到了永久的陌生隔断！
舍弃了秋收的痛苦劳作！
得到了国庆的亲情破裂！
舍弃了半年的工作薪水！
得到了半生的迷茫悔恨！
舍弃了未来的拼搏向往！
得到了夜夜的昏死沉睡！
舍弃了儿时的远大前程！
得到了苟活的渺小后生！
---2024-7-5。</description><guid isPermaLink="true">https://newsd.github.io/post/she-le-de-bu-dao.html</guid><pubDate>Fri, 05 Jul 2024 15:37:30 +0000</pubDate></item><item><title>日本，知小礼……</title><link>https://newsd.github.io/post/ri-ben-%EF%BC%8C-zhi-xiao-li-%E2%80%A6%E2%80%A6.html</link><description>日本，知小礼而无大义，拘小节而无大德，重末节而轻廉耻，畏威而不怀德，强必盗寇，弱必卑伏。</description><guid isPermaLink="true">https://newsd.github.io/post/ri-ben-%EF%BC%8C-zhi-xiao-li-%E2%80%A6%E2%80%A6.html</guid><pubDate>Fri, 05 Jul 2024 15:24:21 +0000</pubDate></item><item><title>50个Java项目实战下载链接</title><link>https://newsd.github.io/post/50-ge-Java-xiang-mu-shi-zhan-xia-zai-lian-jie.html</link><description>50个Java项目实战下载链接：

1、SpringMVC Mybatis教学管理系统实战课 Mybatis数据库设计课程 Bootstrap Jquerymobile框架实战 链接:https://pan.baidu.com/s/1XD_hrceuxwylVqWI6gFhrg 密码:rce6 

2、2018 java300集大型项目实战课程 尚学堂java基础到精通视频教程

链接:https://pan.baidu.com/s/1GWOGQ0ZKFjm-oj9nLOBkEg 密码:7qds

3、58系统高级架构师带你实战高可用架构设计课程

链接:https://pan.baidu.com/s/1SSK2ZqGBhTG1Ia3zZD8ldw 密码:9lk0

4、Activiti6.0工作流引擎深度解析与实战

链接:https://pan.baidu.com/s/1kqITeSXTmjjZGeNH47N4uw 密码:gsfv

5、Elasticsearch ELK分布式全文检索入门视频教程

链接:https://pan.baidu.com/s/1-bMLLsB8moiEuVcQ5XfT6A 密码:ujak

6、Elasticsearch顶尖高手系列-核心知识篇高手进阶篇视频

链接:https://pan.baidu.com/s/1shr7BHex8LreTlMMVWcwAg 密码:xwhr

8、JAVA Cloud微服务项目实战课程 SpringBoot 2.x +SpringCloud 微服务课程下载

链接:https://pan.baidu.com/s/1T5FJT-Dd6g7UbZVYqKNi4A 密码:h3ll

9、JAVA-ACE-架构师系列视频课程- RocketMQ集群视频下载

链接:https://pan.baidu.com/s/1cL_6aiTwNqdRGToIT5Bmdg 密码:2rp4

10、JAVA大规模高并发系统架构极客高阶特训课程 JAVA架构师短期淬炼视频教程

链接:https://pan.baidu.com/s/1eoNbcH_50OaFzE37Hibugw 密码:xk0x

11、JAVA高并发-高性能-高可用-高扩展架构-性能优化系列课程 

链接:https://pan.baidu.com/s/1adoGPIU_Zh1FEcYpM2dowQ 密码:l6hv

12、Java NIO基础视频教程、MINA视频教程、Netty快速入门视频 [有源码]

链接:https://pan.baidu.com/s/1KUppmezw2UYYMKzFaCl4dg 密码:30ll

13、Java Netty高级视频教程 Netty高级课程下载 Java源码分析链接:https://pan.baidu.com/s/1Du18eRZ8sQQ-HD1OLasDVQ 密码:cjfb

14、Java SSM开发大众点评后端 Mybatis实战商城项目

链接:https://pan.baidu.com/s/1Gzms3rWEyRHWLa9DmkemQw 密码:uidm

16、Java Spring电商平台开发教程 电商前后台开发视频教学

链接:https://pan.baidu.com/s/1lfPw_Fz2Zo-Lc03VyVd1aw 密码:il7i

17、Java8实战视频教程完整版下载 汪大神系列教程下载

链接:https://pan.baidu.com/s/1-EwNNDK5h2aUkflXcN3Kiw 密码:jwaw

18、Java8新特性及实战视频教程完整版

链接:https://pan.baidu.com/s/1KAa0C_-0x7FZg-atwxNAvQ 密码:kpo2

19、Java8编程入门-面向对象编程-高级编程

链接:https://pan.baidu.com/s/1hEujdRKm0UG8LDK2M8ssZg 密码:aqya

20、JavaEE Spring 框架实战视频教程 Spring深度解析教程下载 尚硅谷spring源码深度解析

链接:https://pan.baidu.com/s/1B7-rTJaWOTSGS-1Vtmi_Ow 密码:6msh

22、Java从零到企业级电商项目实战

链接:https://pan.baidu.com/s/1W6PER9BsUDa2j2qY8p8u2g 密码:buzy

21、Java仿短视频小程序全栈开发实战视频教程+课程代码

链接:https://pan.baidu.com/s/1idA2AN_SFs_v2CrsIyC45w 密码:04cf

22、Java企业架构师课程（原Sun资深Java架构师亲授)

链接:https://pan.baidu.com/s/1TmoX4uSjO4WgExVPN0n2fQ 密码:i71u

24、Java开发企业级权限管理系统 java项目实战课程

链接:https://pan.baidu.com/s/1wlnDRDLizfUYGYRPKVn6zA 密码:br36

26、Java高并发大型电商详情页系统的大型高性能与高可用缓存架构实战视频教程

链接:https://pan.baidu.com/s/1PXU492K6kz1uc21xIFl6FA 密码:k836

27、Java高级互联网架构师系统培训班课程（nginx+redis+zookeeper+activemq+storm+dubbo+netty+jvm+并发编程锁+项目实战）

链接:https://pan.baidu.com/s/1XPX4fz2_24MkKdi9TbZsDw 密码:wol5

28、Java高级系统培训架构师课程116课时（阶段二）（分布式事物+单点登录+高并发+性能优化+逻辑层处理+数据库性能优化）

链接:https://pan.baidu.com/s/1EsLrZ4IgMP4KFEGoUw4JzQ 密码:3vwy

29、Java高级系统培训架构师课程148课时（阶段一）（maven+spring+mybatis+git+memcached+activemq+nginx+内存调优）

链接:https://pan.baidu.com/s/1qRou0J6ZH_hwozgERHtBTw 密码:efz0

30、Jmeter压力测试项目实战教学 meter入门到精通课程 工具 文档 源码 功能插件

链接:https://pan.baidu.com/s/1ggS0-81BN2dB1pYOFbgKhw 密码:kmke

31、Kotlin核心技术入门与进阶详解视频课程

链接:https://pan.baidu.com/s/18FppUXgKyQSlBPpRqUWXcQ 密码:ctmx

32、Nginx入门到实践-中间件服务、应用层负载均衡、应用层安全防护、动静分离等

链接:https://pan.baidu.com/s/16NfYFUektVJyo87kCp30kA 密码:7orh

33、Nutch搜索引擎高级视频教程

链接:https://pan.baidu.com/s/12YBagw024RS5YkQwBPcIpA 密码:hqrm

34、Redis从入门到精通 Redis入门实战视频教程 Redis视频+文档

链接:https://pan.baidu.com/s/1HBPKW-sL1LBigaAsWn3KIg 密码:80t9

36、SSM快速开发仿慕课网在线教育平台 仿慕课网实战教程

链接:https://pan.baidu.com/s/1wTg7uoFEiV7l-qrASLW6wA 密码:hr4q

37、Spark 2.0大型项目实战视频教程 移动电商app交互式数据分析平台 链接:https://pan.baidu.com/s/1fdpvjxggjFyfTcB7viQCmw 密码:fyel

40、Spring Boot带前后端 渐进式开发企业级博客系统1 链接:https://pan.baidu.com/s/1MIg8FfRrNoaFR1lycTjn5g 密码:rw4c 41、Spring Cloud最新技术入门到精通项目实战视频

链接:https://pan.baidu.com/s/1kT0OUKUpAYTqTgjFu20PRw 密码:hd6i

42、Spring Cloud精华视频 Spring Cloud微服务实战视频教程

链接:https://pan.baidu.com/s/1cfLMO66SxxTwbO0Fwm_BqA 密码:q5sx

43、Spring Cloud项目实战微服务整合spring boot视频教程

链接:https://pan.baidu.com/s/16_Xkf6KJ8u2KjCazzQ0AZw 密码:58vi 44、Spring boot 企业微信点餐系统（项目实战）视频教程 链接:https://pan.baidu.com/s/1bTiWF3XFEsOYrqLM40L7dw 密码:vy8d

46、SpringClout+SpringBoot+微服务电商项目 链接:https://pan.baidu.com/s/1ySIsKQETzKZkbdd_GTYYxw 密码:04ir

48、Springboot零基础到精通视频教程 javaSpringboot项目实战课程 链接:https://pan.baidu.com/s/1RhV6LhyrQcX1cMXTjUHA6g 密码:nw5x

 49、java Netty实战课程 java高性能分布式RPC教程课程 链接:https://pan.baidu.com/s/1cZZv25ikmAVF1GW0qeqtBA 密码:g216

。</description><guid isPermaLink="true">https://newsd.github.io/post/50-ge-Java-xiang-mu-shi-zhan-xia-zai-lian-jie.html</guid><pubDate>Fri, 05 Jul 2024 15:15:11 +0000</pubDate></item><item><title>这是一条好运的博客</title><link>https://newsd.github.io/post/zhe-shi-yi-tiao-hao-yun-de-bo-ke.html</link><description>这是一条好运的博客。</description><guid isPermaLink="true">https://newsd.github.io/post/zhe-shi-yi-tiao-hao-yun-de-bo-ke.html</guid><pubDate>Fri, 05 Jul 2024 14:54:21 +0000</pubDate></item><item><title>你好，仓颉</title><link>https://newsd.github.io/post/ni-hao-%EF%BC%8C-cang-jie.html</link><description>//hello.cj&#13;
main(){&#13;
println('你好，仓颉')&#13;
}。</description><guid isPermaLink="true">https://newsd.github.io/post/ni-hao-%EF%BC%8C-cang-jie.html</guid><pubDate>Fri, 05 Jul 2024 13:48:43 +0000</pubDate></item><item><title>我的第一个个人博客</title><link>https://newsd.github.io/post/wo-de-di-yi-ge-ge-ren-bo-ke.html</link><description>hello world。</description><guid isPermaLink="true">https://newsd.github.io/post/wo-de-di-yi-ge-ge-ren-bo-ke.html</guid><pubDate>Fri, 05 Jul 2024 12:52:23 +0000</pubDate></item></channel></rss>